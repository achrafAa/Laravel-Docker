version: '3'

networks: 
    #NetworkName: 

services:
    
    nginx:
        image: nginx:stable-alpine 
        container_name:  #AppName-nginx 
        ports: 
            - "8080:80"
        volumes:
            - ./www:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - mysql
            - php
        networks: 
            - #NetworkName
        
    mysql:
        image: mysql:5.7.29
        container_name: #AppName-mysql
        restart: unless-stopped
        tty: true
        ports:
          - "3306:3306"      
        environment:
            MYSQL_DATABASE: #dbname
            MYSQL_USER: #dbusername
            MYSQL_PASSWORD: #dbpassword
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: #AppName-mysql
        networks:
            - #NetworkName

    php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: #AppName-php
        volumes:
            - ./www:/var/www
        ports:
            - "9000:9000"
        networks:
            - #NetworkName
    
    composer:
        image: composer:latest
        container_name:  #AppName-composer
        volumes:
            - ./www:/var/www
        working_dir: /var/www
        depends_on:
            - php
        networks:
            -  #NetworkName
            
    npm:
        image: node:13.7
        container_name:  #AppName-npm
        volumes:
            - ./www:/var/www
        working_dir: /var/www
        entrypoint: ['npm']
        networks:
            - #NetworkName

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        container_name:  #AppName-artisan
        volumes:
            - ./www:/var/www
        depends_on:
            - mysql
        working_dir: /var/www
        entrypoint: ['php', '/var/www/artisan']
        networks:
            - #NetworkName